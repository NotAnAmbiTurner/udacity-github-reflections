What happens when you initialize a repository? Why do you need to do it?

    git init: git creates a .git folder which (will/may) track your file revisions
    git status: gives the files which are staged for the next commit, and tells you which have been commited

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    git add: the staging area collects the files for the next commit, only once commited to the addes files enter a repository.
    The repository exists independently of the staging area and working directory. The repository is not updated as the files in the working directory are updated.
    Only the staged files are updated in the staging area as they are updated in the working directory.

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
